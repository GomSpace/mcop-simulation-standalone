Report of STATES and FEATURES for satellite GOMX-4A

modelName : SolarArray
modelType : solararr
  - STATES
    state.insolation = True
    state.sunPower = 1500.0
  - FEATURES
    feature.debugLevel = 20
    feature.runningTimestamp = 0
    feature.powerProduced = 1500.0
  - CHECKS
    check.scenarioBundleFormatting = {'description': 'Error on scenario-bundle', 'severity': 'ABORT', 'range': (None, None)}
    check.missingParameterTimeStamp = {'description': 'Miss reportedTimestamp in scenario-bundle', 'severity': 'ABORT', 'range': (None, None)}

modelName : PCDU1
modelType : pcdu
  - STATES
    state.mainSource = SolarArray
    state.currentMode = OFF
    state.load = 0.0
    state.powerIn = 1500.0
    state.powerOut = 0.0
  - FEATURES
    feature.debugLevel = 20
    feature.runningTimestamp = 0.0
  - CHECKS
    check.scenarioBundleFormatting = {'description': 'Error on scenario-bundle', 'severity': 'ABORT', 'range': (None, None)}
    check.missingParameterTimeStamp = {'description': 'Miss reportedTimestamp in scenario-bundle', 'severity': 'ABORT', 'range': (None, None)}
    check.unknownMode = {'description': 'Check target mode is supported', 'severity': 'WARNING', 'range': (None, None)}

modelName : PCDU2
modelType : pcdu
  - STATES
    state.mainSource = SolarArray
    state.currentMode = ON
    state.load = 0.0
    state.powerIn = 1500.0
    state.powerOut = 1500.0
  - FEATURES
    feature.debugLevel = 20
    feature.runningTimestamp = 0.0
  - CHECKS
    check.scenarioBundleFormatting = {'description': 'Error on scenario-bundle', 'severity': 'ABORT', 'range': (None, None)}
    check.missingParameterTimeStamp = {'description': 'Miss reportedTimestamp in scenario-bundle', 'severity': 'ABORT', 'range': (None, None)}
    check.unknownMode = {'description': 'Check target mode is supported', 'severity': 'WARNING', 'range': (None, None)}

modelName : BatteryPack
modelType : batt
  - STATES
    state.dischargingStatus = False
    state.remainingCharge = True
    state.stateOfCharge = 500000
    state.powerIn = 1500.0
  - FEATURES
    feature.debugLevel = 20
    feature.runningTimestamp = 0.0
    feature.storageCapacity = 500000
    feature.p = 0.0005
    feature.c = 0.5
  - CHECKS
    check.scenarioBundleFormatting = {'description': 'Error on scenario-bundle', 'severity': 'ABORT', 'range': (None, None)}
    check.missingParameterTimeStamp = {'description': 'Miss reportedTimestamp in scenario-bundle', 'severity': 'ABORT', 'range': (None, None)}
    check.batteryLimit = {'description': 'Physical battery limit [%]', 'severity': 'FATAL', 'range': (0, None)}
    check.safeThreshold = {'description': 'Safe charge limit threshold [%]', 'severity': 'WARNING', 'range': (0.3, None)}

modelName : Memory
modelType : storageunit
  - STATES
    state.remainingStorage = True
    state.stateOfData = 701.25
    state.dataRate = 0.0
    state.dataChunk = 0.0
    state.receiving = False
    state.transmitting = False
  - FEATURES
    feature.debugLevel = 20
    feature.runningTimestamp = 0.0
    feature.storageCapacity = 1000
  - CHECKS
    check.scenarioBundleFormatting = {'description': 'Error on scenario-bundle', 'severity': 'ABORT', 'range': (None, None)}
    check.missingParameterTimeStamp = {'description': 'Miss reportedTimestamp in scenario-bundle', 'severity': 'ABORT', 'range': (None, None)}
    check.memoryLimit = {'description': 'Physical memory limit [%]', 'severity': 'FATAL', 'range': (0, None)}
    check.safeThreshold = {'description': 'Safe memory limit threshold [%]', 'severity': 'ERROR', 'range': (0, 0.85)}

modelName : payload1
modelType : payload
  - STATES
    state.powerOnOff = False
    state.currentMode = OFF
    state.latestMode = OFF
    state.enableTMHK = True
    state.dataRate = 0.0
    state.acquisitionId = {}
  - FEATURES
    feature.debugLevel = 20
    feature.runningTimestamp = 0.0
    feature.pcduConnection = PCDU1
    feature.modeAtPowerOn = OFF
    feature.load = {'OFF': 0, 'SLEEP': 10}
    feature.dataRateTMHK = 0.01
  - CHECKS
    check.scenarioBundleFormatting = {'description': 'Error on scenario-bundle', 'severity': 'ABORT', 'range': (None, None)}
    check.missingParameterTimeStamp = {'description': 'Miss reportedTimestamp in scenario-bundle', 'severity': 'ABORT', 'range': (None, None)}
    check.connectedPCDUoff = {'description': 'Check if connected PCDU is OFF when change mode', 'severity': 'ERROR', 'range': (None, None)}
    check.modelOff = {'description': 'Check if model is OFF at data acquisition action request', 'severity': 'ERROR', 'range': (None, None)}
    check.unknownMode = {'description': 'Check target mode is supported', 'severity': 'WARNING', 'range': (None, None)}

modelName : NanoCam
modelType : payload
  - STATES
    state.powerOnOff = True
    state.currentMode = OFF
    state.latestMode = OFF
    state.enableTMHK = False
    state.dataRate = 0
    state.acquisitionId = {'id2': 'End'}
    state.load = 5
  - FEATURES
    feature.debugLevel = 20
    feature.runningTimestamp = 400000.0
    feature.pcduConnection = PCDU2
    feature.modeAtPowerOn = OFF
    feature.load = {'OFF': 0, 'SLEEP': 5, 'SNAP': 500, 'RECORD': 46}
    feature.dataRateTMHK = 0.05
  - CHECKS
    check.scenarioBundleFormatting = {'description': 'Error on scenario-bundle', 'severity': 'ABORT', 'range': (None, None)}
    check.missingParameterTimeStamp = {'description': 'Miss reportedTimestamp in scenario-bundle', 'severity': 'ABORT', 'range': (None, None)}
    check.connectedPCDUoff = {'description': 'Check if connected PCDU is OFF when change mode', 'severity': 'WARNING', 'range': (None, None)}
    check.modelOff = {'description': 'Check if model is OFF at data acquisition action request', 'severity': 'ERROR', 'range': (None, None)}
    check.unknownMode = {'description': 'Check target mode is supported', 'severity': 'WARNING', 'range': (None, None)}

modelName : Rx
modelType : receiver
  - STATES
    state.powerOnOff = False
    state.currentMode = OFF
    state.amountDataToHandle = {}
    state.dataRate = 0
    state.windowDuration = 0
    state.startWindowTime = {}
    state.antGSavailability = {}
    state.currentAntGS = 
    state.receiverAvailability = True
    state.contactWaitingList = []
  - FEATURES
    feature.debugLevel = 20
    feature.runningTimestamp = 0.0
    feature.pcduConnection = PCDU1
    feature.modeAtPowerOn = SLEEP
    feature.load = {'OFF': 0, 'SLEEP': 5, 'RECEPTION': 500}
  - CHECKS
    check.scenarioBundleFormatting = {'description': 'Error on scenario-bundle', 'severity': 'ABORT', 'range': (None, None)}
    check.missingParameterTimeStamp = {'description': 'Miss reportedTimestamp in scenario-bundle', 'severity': 'ABORT', 'range': (None, None)}
    check.connectedPCDUoff = {'description': 'Check if connected PCDU is OFF when change mode', 'severity': 'ERROR', 'range': (None, None)}
    check.noWindowAvailable = {'description': 'Check if there is time left on the window for the communication', 'severity': 'ERROR', 'range': (None, None)}
    check.receptionOngoing = {'description': 'Check if model is already receiving as new contact event arrives', 'severity': 'WARNING', 'range': (None, None)}
    check.gsAntNotAvailable = {'description': 'Check if ground station antenna is available as new contact event arrives', 'severity': 'ERROR', 'range': (None, None)}
    check.someDataLeft = {'description': 'Check if all data received in the contact', 'severity': 'WARNING', 'range': (None, None)}
    check.invalidCommand = {'description': 'Check if command is valid', 'severity': 'ERROR', 'range': (None, None)}

modelName : Tx
modelType : transmitter
  - STATES
    state.powerOnOff = True
    state.currentMode = OFF
    state.amountDataToHandle = {}
    state.dataRate = 0
    state.windowDuration = 0
    state.startWindowTime = {}
    state.antGSavailability = {}
    state.currentAntGS = 
    state.transmitterAvailability = True
    state.contactWaitingList = []
  - FEATURES
    feature.debugLevel = 20
    feature.runningTimestamp = 0.0
    feature.pcduConnection = PCDU2
    feature.modeAtPowerOn = SLEEP
    feature.load = {'OFF': 0, 'SLEEP': 5, 'TRANSMISSION': 500}
  - CHECKS
    check.scenarioBundleFormatting = {'description': 'Error on scenario-bundle', 'severity': 'ABORT', 'range': (None, None)}
    check.missingParameterTimeStamp = {'description': 'Miss reportedTimestamp in scenario-bundle', 'severity': 'ABORT', 'range': (None, None)}
    check.connectedPCDUoff = {'description': 'Check if connected PCDU is OFF when change mode', 'severity': 'ERROR', 'range': (None, None)}
    check.noWindowAvailable = {'description': 'Check if there is time left on the window for the communication', 'severity': 'ERROR', 'range': (None, None)}
    check.transmissionOngoing = {'description': 'Check if model is already transmitting as new contact event arrives', 'severity': 'WARNING', 'range': (None, None)}
    check.gsAntNotAvailable = {'description': 'Check if ground station antenna is available as new contact event arrives', 'severity': 'ERROR', 'range': (None, None)}
    check.someDataLeft = {'description': 'Check if all data transmitted in the contact', 'severity': 'WARNING', 'range': (None, None)}
    check.invalidCommand = {'description': 'Check if command is valid', 'severity': 'ERROR', 'range': (None, None)}

